ðŸ”¹ Perpustakaan Arduino yang diperlukan
Pastikan anda telah memasang pustaka berikut di Arduino IDE:

DHT sensor library (by Adafruit)
PubSubClient (MQTT)
WiFi.h (ESP32)

________________________________________________________

#include <WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>

// WiFi Credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// ThingsBoard MQTT
const char* mqttServer = "demo.thingsboard.io";
const int mqttPort = 1883;
const char* token = "YOUR_DEVICE_ACCESS_TOKEN";

WiFiClient espClient;
PubSubClient client(espClient);

// Pin Definitions
#define DHTPIN 27
#define DHTTYPE DHT11
#define PIR_PIN 26
#define RELAY_PIN 25

DHT dht(DHTPIN, DHTTYPE);
bool manualControl = false;
bool fanState = false;
float tempThreshold = 30.0;  // Suhu ambang

void callback(char* topic, byte* payload, unsigned int length) {
    String message = "";
    for (int i = 0; i < length; i++) {
        message += (char)payload[i];
    }

    if (String(topic) == "v1/devices/me/attributes") {
        if (message == "manual_on") {
            manualControl = true;
            fanState = true;
        } else if (message == "manual_off") {
            manualControl = true;
            fanState = false;
        } else if (message == "auto_mode") {
            manualControl = false;
        }
    }
}

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Connecting...");
    }
    Serial.println("WiFi Connected");

    client.setServer(mqttServer, mqttPort);
    client.setCallback(callback);

    while (!client.connected()) {
        if (client.connect("ESP32", token, NULL)) {
            Serial.println("Connected to ThingsBoard");
            client.subscribe("v1/devices/me/attributes");
        } else {
            delay(2000);
        }
    }

    pinMode(RELAY_PIN, OUTPUT);
    pinMode(PIR_PIN, INPUT);
    dht.begin();
}

void loop() {
    if (!client.connected()) {
        while (!client.connected()) {
            client.connect("ESP32", token, NULL);
            delay(1000);
        }
    }
    
    float temp = dht.readTemperature();
    float hum = dht.readHumidity();
    int pirState = digitalRead(PIR_PIN);

    if (!manualControl) {
        if (temp > tempThreshold || pirState == HIGH) {
            fanState = true;
        } else {
            fanState = false;
        }
    }

    digitalWrite(RELAY_PIN, fanState ? HIGH : LOW);

    String payload = "{\"temperature\": " + String(temp) + ", \"humidity\": " + String(hum) + ", \"motion\": " + String(pirState) + ", \"fan_state\": " + String(fanState) + "}";
    client.publish("v1/devices/me/telemetry", payload.c_str());

    Serial.println(payload);
    client.loop();
    delay(5000);
}
